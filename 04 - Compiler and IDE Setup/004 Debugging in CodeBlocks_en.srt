1
00:00:02,330 --> 00:00:06,770
In this video, we will see how to use a debugger in code blocks.

2
00:00:09,560 --> 00:00:16,010
Debugger is used for tracing the program's execution line by line, we can trace the program to see

3
00:00:16,010 --> 00:00:20,780
it's working in detail by checking the execution of each line.

4
00:00:21,470 --> 00:00:23,720
It's also called us tracing the program.

5
00:00:25,140 --> 00:00:32,070
If there is any error or the program is not giving expected results, we can check the execution of

6
00:00:32,070 --> 00:00:35,490
the program line by line, and we can catch that error.

7
00:00:37,340 --> 00:00:40,250
Even for understanding the working of a program.

8
00:00:43,570 --> 00:00:45,520
We can take the help of debugger.

9
00:00:46,550 --> 00:00:50,000
I have used a debugger in few programs in my codes.

10
00:00:50,150 --> 00:00:53,870
So here we will see how to use a debugger.

11
00:00:54,740 --> 00:00:59,270
For that, I will create a new project and I will write down the program.

12
00:01:00,410 --> 00:01:04,340
So create a new project and say console application.

13
00:01:06,180 --> 00:01:08,610
Then this should be C++, right?

14
00:01:09,420 --> 00:01:13,230
The next here, I will call it as my debug.

15
00:01:18,380 --> 00:01:19,340
Yes.

16
00:01:19,430 --> 00:01:20,180
It's ready.

17
00:01:20,950 --> 00:01:25,270
Now here already I have a program, so I will place the program here directly.

18
00:01:26,530 --> 00:01:27,730
Here is my program.

19
00:01:27,730 --> 00:01:31,940
So the program is to find the sum of all the elements in an array.

20
00:01:31,960 --> 00:01:33,760
These are the elements in an array.

21
00:01:34,510 --> 00:01:40,330
The program will add all these elements and store the result in sum, by taking one element at a time

22
00:01:40,330 --> 00:01:41,530
in variable x.

23
00:01:41,530 --> 00:01:43,660
So this type of programs we will see later.

24
00:01:43,660 --> 00:01:46,720
But here the purpose is to show you debugging.

25
00:01:47,500 --> 00:01:50,500
So let us first of all compile the program.

26
00:01:50,500 --> 00:01:53,020
So go to build and say.

27
00:01:54,100 --> 00:01:55,450
Build and run.

28
00:01:55,630 --> 00:01:58,300
So it will compile and build the program and run.

29
00:01:58,300 --> 00:02:00,340
So I'm getting the result as 25.

30
00:02:00,460 --> 00:02:03,970
That is sum of all these elements in an early.

31
00:02:06,250 --> 00:02:09,940
That is one plus two plus five plus eight plus nine is 25.

32
00:02:10,900 --> 00:02:13,210
Now the program is already combined.

33
00:02:13,480 --> 00:02:15,010
Now I want to run the debugger.

34
00:02:15,040 --> 00:02:20,530
So before running the debugger, I should put a breakpoint on any one of the statement.

35
00:02:20,530 --> 00:02:21,730
So I'll put a breakpoint.

36
00:02:21,760 --> 00:02:26,530
It's better to put a breakpoint on the beginning statement so we can see that execution of all these

37
00:02:26,530 --> 00:02:27,760
statements one by one.

38
00:02:27,970 --> 00:02:33,100
So go on this line eight and right click and say Add breakpoint.

39
00:02:33,640 --> 00:02:35,680
So here you have to say add breakpoint.

40
00:02:35,680 --> 00:02:40,270
And then again, right click on this line to delete it.

41
00:02:40,270 --> 00:02:44,620
Remove the breakpoint so you can remove breakpoint like this.

42
00:02:45,040 --> 00:02:46,480
So I'll add it once again.

43
00:02:46,480 --> 00:02:47,950
Say, add breakpoint.

44
00:02:48,610 --> 00:02:50,050
Now Breakpoint is ready.

45
00:02:50,050 --> 00:02:51,520
I have to call debugger.

46
00:02:51,730 --> 00:02:55,180
So go to debug option and say start.

47
00:02:56,390 --> 00:02:56,810
Right.

48
00:02:56,810 --> 00:02:59,150
So the option is f eight here.

49
00:03:00,080 --> 00:03:04,760
Again, if you want to execute line by line, you can use F seven.

50
00:03:04,850 --> 00:03:06,440
So let us start.

51
00:03:06,470 --> 00:03:11,930
Debugger is started now if you want to see the contents of the variables, what the values are there

52
00:03:11,930 --> 00:03:14,870
in the variables you have to add a watch.

53
00:03:15,110 --> 00:03:22,040
So for getting a watch window, this is the method go to debug menu and inside that select debugging

54
00:03:22,040 --> 00:03:25,040
windows menu and click on watch us.

55
00:03:27,080 --> 00:03:27,470
Here.

56
00:03:27,470 --> 00:03:32,330
I got watches and this is already having variables like some and a.

57
00:03:32,420 --> 00:03:36,170
So here inside the program you can see some is there and a is there.

58
00:03:36,410 --> 00:03:41,750
So this a if I open then you can see it is having the values one, two and five, eight, nine.

59
00:03:41,750 --> 00:03:45,530
So which are already given here, but it is not showing x.

60
00:03:45,530 --> 00:03:51,980
So if it is not showing any variable, you just can select that variable right click and say watch x

61
00:03:52,520 --> 00:03:55,070
so it's not available in current context.

62
00:03:56,530 --> 00:04:01,300
And even if it is not showing other variables like some or a, you can select it.

63
00:04:02,200 --> 00:04:05,410
Now, before we continue, let us see what this program is doing.

64
00:04:05,440 --> 00:04:11,200
This program is going to add all these elements and find the sum of all these elements in variable X.

65
00:04:11,200 --> 00:04:17,230
So X will be taking the values that are present in array a one by one, like one, two, five, eight

66
00:04:17,230 --> 00:04:17,980
and nine.

67
00:04:18,100 --> 00:04:20,529
Then it will be going, adding them to sum.

68
00:04:20,709 --> 00:04:28,660
So here inside the watch, you have to observe how the values of this sum and this X are changing right

69
00:04:29,050 --> 00:04:29,350
now.

70
00:04:29,350 --> 00:04:30,280
Let us proceed.

71
00:04:30,280 --> 00:04:32,350
So I'll execute the next statement.

72
00:04:32,350 --> 00:04:35,500
I'll press F seven now.

73
00:04:38,390 --> 00:04:42,500
That is already there and access is still not defined.

74
00:04:43,220 --> 00:04:51,470
Now you can see that X is having value one here in red, then some is still zero and it is on this 14th

75
00:04:51,470 --> 00:04:54,020
line where it has not yet added this one.

76
00:04:54,050 --> 00:04:58,220
Once this line ends, the value of X will be added to sum.

77
00:04:58,460 --> 00:05:01,970
So if I press f seven, you can see the value of some will be changing.

78
00:05:07,720 --> 00:05:09,130
If some became one.

79
00:05:09,340 --> 00:05:11,970
Then again, if I continue X became two.

80
00:05:11,980 --> 00:05:15,670
So you have to watch in the site, X became two.

81
00:05:15,700 --> 00:05:18,190
Now next line, the sum becomes three.

82
00:05:18,190 --> 00:05:19,750
So one plus two, that is three.

83
00:05:19,840 --> 00:05:26,830
Then sum becomes five and sum becomes eight, x became five and then some became eight.

84
00:05:27,400 --> 00:05:33,220
Now x is eight and some becomes 16, x is nine, then some becomes 25.

85
00:05:33,670 --> 00:05:35,110
Now it will come out of the loop.

86
00:05:35,110 --> 00:05:41,560
So here you can see that the line, this this current line is shown by this arrow here, not responding

87
00:05:41,560 --> 00:05:42,340
on this one.

88
00:05:42,340 --> 00:05:46,720
If I press f seven, then the value will be printed and here is the window.

89
00:05:46,990 --> 00:05:50,170
You can click on this and see the value 25 is printed.

90
00:05:52,210 --> 00:05:53,310
So that's it.

91
00:05:53,320 --> 00:05:59,830
This is how you can use a debugger for executing the program line by line and see how it is executing,

92
00:05:59,830 --> 00:06:02,620
how it is modifying or updating the variables.

93
00:06:03,550 --> 00:06:09,760
You can take the help of debugger for detailed understanding of execution of program, and also if there

94
00:06:09,760 --> 00:06:13,150
are any errors, you can trace it and remove the errors.

95
00:06:13,930 --> 00:06:15,400
So that's all in this video.

